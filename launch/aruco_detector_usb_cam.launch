<launch>

	<!-- Usb camera params -->
	<arg name="video_device" default="/dev/video0" />
	<arg name="image_width"  default="640" />
	<arg name="image_height" default="480" />
	<!-- Pass rviz config file path -->
	<arg name="rviz_path" default="usb_cam_aruco"/>

	<!--  Aruco detection parameters -->
	<arg name="camera" default="/usb_cam"/>
	<arg name="image" default="image_raw"/>
	<arg name="transport" default="compressed"/>
	<arg name="fiducial_len" default="0.153"/>
	<arg name="dictionary" default="16"/>
	<arg name="do_pose_estimation" default="true"/>
	<!-- If vis_msgs set to true, pose estimation will be published with ROS standard vision_msgs -->
	<arg name="vis_msgs" default="false"/>
	<arg name="ignore_fiducials" default="" />
	<arg name="fiducial_len_override" default="" />  	<!-- 10: 0.04, 13: 0.041 -->
	<arg name="verbose" default="false"/>

	<!-- Usb camera launch -->
	<include file="$(find cameras)/launch/usb_cam.launch">
		<arg name="video_device" value="$(arg video_device)"/>
		<arg name="image_width"  value="$(arg image_width)"/>
		<arg name="image_height" value="$(arg image_height)"/>
		<arg name="rviz_path" 	 value="$(arg rviz_path)"/>
  	</include>

	<!-- Publish a dummy config camera matrix on camera info topic -->
	<node pkg="cameras" type="fake_camera_info_pub.py" name="camera_info_publisher" />

	<!-- Publish a dummy tf beteen map and usb_cam to activate pose detectioin -->
	<node pkg="tf2_ros" type="static_transform_publisher" name="usb_cam_tf_publisher"
		args="0 0 0 -0.5 0.5 -0.5 0.5 map usb_cam" />

	<!-- Aruco_detect node -->
	<node pkg="aruco_detect" name="aruco_detect"
		type="aruco_detect" output="log" respawn="false">
		<param name="image_transport" value="$(arg transport)"/>
		<param name="publish_images" value="true" />
		<param name="fiducial_len" value="$(arg fiducial_len)"/>
		<param name="dictionary" value="$(arg dictionary)"/>
		<param name="do_pose_estimation" value="$(arg do_pose_estimation)"/>
		<param name="vis_msgs" value="$(arg vis_msgs)"/>
		<param name="ignore_fiducials" value="$(arg ignore_fiducials)"/>
		<param name="fiducial_len_override" value="$(arg fiducial_len_override)"/>
		<param name="verbose" value="$(arg verbose)"/>
		<remap from="camera/compressed" 
			to="$(arg camera)/$(arg image)/$(arg transport)"/>
		<remap from="camera_info" to="$(arg camera)/camera_info"/>
	</node>

</launch>
